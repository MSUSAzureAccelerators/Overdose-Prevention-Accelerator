{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "1797517202036383057"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "OOA-rg",
      "metadata": {
        "description": "Name for the resource group."
      }
    },
    "resourceGroupLocation": {
      "type": "string",
      "defaultValue": "westus",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "siteName": "[format('ooa-{0}', uniqueString(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('resourceGroupLocation')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-frontend', variables('siteName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "17386877393137462727"
            }
          },
          "parameters": {
            "appName": {
              "type": "string",
              "defaultValue": "[format('OOA-{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Name that will be used to build associated artifacts"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "S1",
              "metadata": {
                "description": "Which Pricing tier our App Service Plan to"
              }
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "How many instances of our app service will be scaled out to"
              }
            },
            "repoURL": {
              "type": "string",
              "defaultValue": "https://github.com/MSUSSolutionAccelerators/Overdose-Prevention-Solution-Accelerator.git",
              "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
              }
            },
            "branch": {
              "type": "string",
              "defaultValue": "main",
              "metadata": {
                "description": "The branch of the GitHub repository to use."
              }
            }
          },
          "variables": {
            "appServicePlanName": "[format('asp-{0}', parameters('appName'))]",
            "webSiteName": "[toLower(format('wapp-{0}', parameters('appName')))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              },
              "tags": {
                "displayName": "HostingPlan",
                "ProjectName": "[parameters('appName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-12-01",
              "name": "[variables('webSiteName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "displayName": "Website",
                "ProjectName": "[parameters('appName')]"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/sourcecontrols",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/{1}', variables('webSiteName'), 'web')]",
              "location": "[parameters('location')]",
              "properties": {
                "repoUrl": "[parameters('repoURL')]",
                "branch": "[parameters('branch')]",
                "isManualIntegration": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]",
                "[resourceId('Microsoft.Web/sites/config', variables('webSiteName'), 'appsettings')]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', variables('webSiteName'), 'appsettings')]",
              "properties": {
                "PROJECT": "Overdose-Accelerator-Web\\OverdoseAcceleratorWeb.csproj",
                "clientUrl": "[format('http://{0}.azurewebsites.net', parameters('appName'))]",
                "netFrameworkVersion": "v6.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-functionApp', variables('siteName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "4237797354817029302"
            }
          },
          "parameters": {
            "appName": {
              "type": "string",
              "defaultValue": "[format('OOA-API-{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "The name of the function app that you wish to create."
              }
            },
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "Storage Account type"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "S1",
              "metadata": {
                "description": "Which Pricing tier our App Service Plan to"
              }
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "How many instances of our app service will be scaled out to"
              }
            },
            "runtime": {
              "type": "string",
              "defaultValue": "python",
              "metadata": {
                "description": "The language worker runtime to load in the function app."
              }
            },
            "repoURL": {
              "type": "string",
              "defaultValue": "https://github.com/MSUSSolutionAccelerators/Overdose-Prevention-Solution-Accelerator.git",
              "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
              }
            },
            "branch": {
              "type": "string",
              "defaultValue": "main",
              "metadata": {
                "description": "The branch of the GitHub repository to use."
              }
            }
          },
          "variables": {
            "functionAppName": "[parameters('appName')]",
            "appServicePlanName": "[parameters('appName')]",
            "storageAccountName": "[format('ooads{0}', uniqueString(resourceGroup().id))]",
            "functionWorkerRuntime": "[parameters('runtime')]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-08-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              },
              "kind": "functionapp,linux",
              "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[variables('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "displayName": "Function App",
                "ProjectName": "[parameters('appName')]"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                  "numberOfWorkers": 1,
                  "linuxFxVersion": "Python|3.9",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('functionAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "~10"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "[variables('functionWorkerRuntime')]"
                    }
                  ],
                  "ftpsState": "FtpsOnly",
                  "minTlsVersion": "1.2"
                },
                "httpsOnly": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}